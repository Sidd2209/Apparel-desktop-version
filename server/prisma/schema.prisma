// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                String   @id @default(uuid())
  email             String   @unique
  name              String
  department        String?
  preferredHomepage String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Product {
  id               String   @id @default(uuid())
  name             String
  sku              String?  @unique
  category         String?
  season           String?
  designer         String?
  status           String
  developmentStage String
  actualHours      Float?
  priority         String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  samples          Sample[]
  designFiles      DesignFile[]
  // Add relations if needed
}

model Order {
  id           String   @id @default(uuid())
  orderNumber  String   @unique
  productId    String
  quantity     Int
  status       String
  totalValue   Float
  customerName String
  productType  String
  assignedTo   String
  validDate    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  // Add relations if needed
}

model Sample {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  type      String
  status    String
  notes     String?
  version   Int?
  feedback  String?
  approvedBy String?
  createdAt DateTime @default(now())
}

model DesignFile {
  id          String   @id @default(uuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  fileName    String
  fileType    String?
  url         String?
  version     Int?
  isLatest    Boolean?
  uploadedBy  String?
  uploadedAt  DateTime @default(now())
}

model CostingSheet {
  id              String   @id @default(uuid())
  name            String
  profitMargin    Float
  selectedCurrency String
  costBreakdown   String   // JSON string for materials, labor, overheads
  taxConfig       String   // JSON string for VAT, customs, other taxes
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model ProductionPlan {
  id              String   @id @default(uuid())
  productName     String
  quantity        Int
  startDate       DateTime
  endDate         DateTime
  status          String
  progress        Int      @default(0)
  assignedWorkers Int      @default(0)
  estimatedHours  Int      @default(0)
  actualHours     Int      @default(0)
  priority        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Resource {
  id         String   @id @default(uuid())
  name       String
  type       String
  capacity   Int
  allocated  Int      @default(0)
  available  Int      @default(0)
  efficiency Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model InventoryItem {
  id           String   @id @default(uuid())
  name         String
  category     String
  currentStock Int
  minStock     Int
  maxStock     Int
  unit         String
  unitCost     Float
  totalValue   Float
  location     String
  lastUpdated  DateTime @default(now())
  supplier     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model InventoryHistory {
  id             String   @id @default(uuid())
  itemId         String
  action         String
  quantityChange Int
  previousStock  Int
  newStock       Int
  note           String?
  user           String?
  createdAt      DateTime @default(now())
}

model InventoryReorder {
  id       String   @id @default(uuid())
  itemId   String
  quantity Int
  supplier String?
  status   String
  note     String?
  user     String?
  createdAt DateTime @default(now())
}
